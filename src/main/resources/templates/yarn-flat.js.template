#!/usr/bin/env node
/*
 * Copyright 2018-2019 Devsoap Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const os = require("os");
const pty = require("${ptyPackage}");
const semver = require("semver");
const shell = os.platform() === 'win32' ? 'powershell.exe' : 'yarn';
let params = ["install", '${productionMode}', "--flat"];
if (os.platform() === 'win32') {
  params.unshift('yarn');
}
function semverComparator(a, b) {
  if (semver.lt(a, b)) {
    return -1;
  } else if (semver.gt(a, b)) {
    return 1;
  } else {
    return 0;
  }
}
const proc = pty.spawn(shell, params, {
  name: "xterm",
  cols: 1000,
  rows: 30,
  env: process.env,
  cwd: "${distDir}"
});
let buff = "";
proc.on("data", function(data) {
  buff += data.toString();
  if (buff.match(/Answer\\?:/g)) {
	const suitableVersion = buff.match(/suitable version for "(\\S+)"/);
	if(suitableVersion == null) return;
    const packageName = suitableVersion[1];
	const versions = buff
		.split(/\\r?\\n/g)
		.map(line => line.trim().replace(
    /[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g, ''))
		.filter(line => line.match(/^[0-9]\\).*/))
		.filter(line => line.match("which resolved to"))
		.map(line => line.match(/"(\\S+)"\$/)[1]);
    const sorted = versions.slice(0).sort(semverComparator);
    const highestVersion = sorted[sorted.length - 1];
    const choice = versions.indexOf(highestVersion) + 1;
    console.log("Choosing " + packageName + "@" + highestVersion);
    proc.write(choice.toString() + "\\r\\n");
    buff = "";
  }
});
proc.on("error", err => {
  console.error(err)
});
