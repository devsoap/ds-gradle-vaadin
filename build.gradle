/*
 * Copyright 2018 Devsoap Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import org.apache.tools.ant.filters.ReplaceTokens

/***********************************************************************************************************************
 *
 * Plugins
 *
 **********************************************************************************************************************/
plugins {
    id 'java-gradle-plugin'
    id 'groovy'
    id 'idea'
    id 'codenarc'
    id 'checkstyle'
    id 'com.gradle.plugin-publish' version '0.9.10'
}

/***********************************************************************************************************************
 *
 * Basic properties
 *
 **********************************************************************************************************************/

defaultTasks 'jar'
group 'com.devsoap'
version = project.hasProperty('BUILD_VERSION') ? getProperty('BUILD_VERSION') : '1.0-SNAPSHOT-'+ new Date().format('yyyyMMdd')
archivesBaseName = 'gradle-vaadin-flow-plugin'
sourceCompatibility = 1.8
targetCompatibility = 1.8

/***********************************************************************************************************************
 *
 * Sources
 *
 **********************************************************************************************************************/

sourceSets {
    functionalTest {
        groovy {
            srcDir file('src/functionalTest/groovy')
        }
        resources {
            srcDir file('src/functionalTest/resources')
        }
        compileClasspath += sourceSets.main.output + configurations.testRuntime
        runtimeClasspath += output + compileClasspath
    }
}

processResources {
    from(sourceSets.main.resources.srcDirs){
        filesMatching('versions.properties'){
            filter(ReplaceTokens, tokens: [
                    version: project.version
            ])
        }
    }
}

/***********************************************************************************************************************
 *
 * Repositories & Dependencies
 *
 **********************************************************************************************************************/

repositories {
    mavenCentral()
    jcenter()
    maven { url = 'https://plugins.gradle.org/m2/' }
}

dependencies {
    compile localGroovy()

    compile group: 'com.moowork.node', name: 'com.moowork.node.gradle.plugin', version: '1.2.0'

    testCompile('org.spockframework:spock-core:1.1-groovy-2.4') {
        exclude group: 'org.codehaus.groovy'
    }
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

/***********************************************************************************************************************
 *
 * Artifacts
 *
 **********************************************************************************************************************/

jar {
    manifest{
        attributes(
                'Vaadin-Package-Version': 1,
                'Implementation-Title': 'Vaadin Flow Plugin for Gradle',
                'Implementation-Version': version,
                'Implementation-Vendor': 'Devsoap Inc.',
        )
    }
    from 'gradle.properties'
}

/**
 * Plugin artifact sources.
 */
task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
    include 'com/**/*.groovy'
    include 'com/**/*.java'
}

/**
 * Artifacts in build
 */
artifacts {
    archives jar
    archives sourcesJar
}

/**
 * API documentation
 */
groovydoc {
    docTitle = "Gradle Vaadin Flow Plugin $version API"
    windowTitle = "Gradle Vaadin Flow Plugin Version $version"
    footer = "Gradle Vaadin Flow Plugin is maintained by <a href=\"https://github.com/johndevs/\">@johndevs</a>. Copyright Â© 2018"
}


/***********************************************************************************************************************
 *
 * Testing & Quality
 *
 ***********************************************************************************************************************/
task functionalTest(type: Test) {
    dependsOn test
    group = 'Verification'

    systemProperties = System.properties as Map
    if (!systemProperties['spock.configuration']) {
        systemProperty 'spock.configuration', "${findProperty('TEST_CATEGORY') ?: 'AllTests' }Config.groovy"
    }

    if (!systemProperties['yarn.cache.dir']) {
        systemProperty 'yarn.cache.dir', new File(project.rootProject.projectDir, 'yarn-cache').canonicalPath
    }

    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    maxParallelForks = 1
    testLogging {
        exceptionFormat = 'full'
        showStandardStreams = true
    }
}
check.dependsOn functionalTest

codenarc{
    toolVersion = '1.1'
    configFile = rootProject.file('config/codenarc/ruleset.groovy')
    maxPriority1Violations = 0
    maxPriority2Violations = 0
    maxPriority3Violations = 0
    codenarcFunctionalTest {
        configFile = rootProject.file('config/codenarc/ruleset-test.groovy')
    }
    codenarcTest {
        configFile = rootProject.file('config/codenarc/ruleset-test.groovy')
    }
}

checkstyle {
    configDir = rootProject.file('config/checkstyle')
}

plugins.withType(GroovyBasePlugin) {
    sourceSets.all { sourceSet ->
        task "${sourceSet.getTaskName('checkstyle', 'groovy')}"(type: Checkstyle) {
            configFile = rootProject.file('config/checkstyle/checkstyle.xml')
            source sourceSet.allGroovy
            classpath = sourceSet.compileClasspath
            reports.xml.destination rootProject.file("build/reports/checkstyle/${sourceSet.name}.xml")
        }
    }
}
/***********************************************************************************************************************
 *
 * Deployment
 *
 ***********************************************************************************************************************/
gradlePlugin {
    testSourceSets sourceSets.functionalTest
    plugins {
        vaadinPlugin {
            id = 'com.devsoap.vaadin-flow'
            implementationClass = 'com.devsoap.vaadinflow.VaadinFlowPlugin'
        }
    }
}

pluginBundle {
    website = 'https://github.com/devsoap/gradle-vaadin-flow/wiki'
    vcsUrl = 'https://github.com/devsoap/gradle-vaadin-flow'
    description = 'Build Vaadin Flow applications with Gradle!'
    tags = ['vaadin', 'vaadin-flow', 'vaadin-elements', 'polymer', 'java', 'groovy', 'kotlin']
    plugins {
        vaadinPlugin {
            id = gradlePlugin.plugins.vaadinPlugin.id
            displayName = 'Gradle Vaadin Flow plugin'
        }
    }
    mavenCoordinates {
        groupId = project.group
        artifactId = project.archivesBaseName
    }
}

/***********************************************************************************************************************
 *
 * Misc.
 *
 **********************************************************************************************************************/
wrapper {
    gradleVersion = '5.0'
    distributionUrl = distributionUrl.replace('bin', 'all') // Download sources
}

